%FX_DECON_DEMO: Demo for FX decon.
%
%
%     -------------------------------------------
%         A demo showing how one can eliminate
%     random noise with FX - Decon (Canales method)
%
%                M.D.Sacchi, SeismicLab
%      -------------------------------------------
%
% FX deconvolution fits a linear prediction model
% (often called an autoregressive model) to 
% spatial data in the FX domain. The modeled data
% (data generated by the auto-regression) is the output
% of the process.
% 
% This demo uses the following SeismicLab functions:
%
%               linear_events.m               
%               add_noise.m 
%               fx_decon.m
%

clear all
close all;
clc


 dt = 0.004;
 f0 = 30;
 tmax = 1;
 dx = 1; 
 h = [0:1:79];
 tau = [0.4,0.12,0.22, 0.9, 1.3];
 p = [0,  0.001, 0.0012,-0.0011, -0.001];
 amp = [-1, 1    2,    1   , -1];
 snr = 2;
 L = 5;

% Clearn signal 

 D0 = linear_events(dt,f0,tmax,h,tau,p,amp);

% Add noise 

 Dn = add_noise(D0,snr,L);

% Denoise via fx_decon

 lf = 5;
 mu = 0.01; 
 flow = 1.;
 fhigh = 100;

 Df = fx_decon(Dn,dt,lf,mu,flow,fhigh);

% Plots

 c = 0.95*max(abs(D0(:)));

 figure(1); clf;
 set(gcf, 'Position',  [100, 800,1200, 400])
 subplot(131); imagesc(D0,c*[-1,1]);title('Clean signal');
 subplot(132); imagesc(Dn,c*[-1,1]);title('Noisy signal');
 subplot(133); imagesc(Df,c*[-1,1]);title('Denoised signal');
 colormap(seismic(2));


 [Q1] = quality(Dn,D0);
 [Q2] = quality(Df,D0);
  

  fprintf(' ----------------------------------------- \n')
  fprintf(' ----------------------------------------- \n')
  fprintf(' Demo FX decon                             \n')
  fprintf(' SNR of input                %6.2f db \n',Q1)
  fprintf(' SNR of output               %6.2f db \n',Q2)
  fprintf(' ----------------------------------------- \n')
  fprintf(' ----------------------------------------- \n')
